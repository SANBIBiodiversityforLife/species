# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-09-15 07:51
from __future__ import unicode_literals

import django.contrib.postgres.fields.ranges
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('people', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Authorship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.PositiveIntegerField(default=0)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='people.Person')),
            ],
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=400)),
                ('abbreviation', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('city', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('doi', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('reference_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='biblio.Reference')),
                ('edition', models.PositiveIntegerField(blank=True, null=True)),
                ('month', models.PositiveIntegerField(blank=True, null=True)),
                ('series', models.CharField(blank=True, max_length=200, null=True)),
                ('pages', models.PositiveIntegerField(blank=True, null=True)),
                ('isbn', models.CharField(blank=True, max_length=100, null=True)),
                ('editors', models.ManyToManyField(blank=True, to='people.Person')),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='biblio.Publisher')),
            ],
            options={
                'abstract': False,
            },
            bases=('biblio.reference',),
        ),
        migrations.CreateModel(
            name='BookChapter',
            fields=[
                ('reference_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='biblio.Reference')),
                ('page_range', django.contrib.postgres.fields.ranges.IntegerRangeField()),
                ('parent_book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapter', to='biblio.Book')),
            ],
            options={
                'abstract': False,
            },
            bases=('biblio.reference',),
        ),
        migrations.CreateModel(
            name='JournalArticle',
            fields=[
                ('reference_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='biblio.Reference')),
                ('page_range', django.contrib.postgres.fields.ranges.IntegerRangeField()),
                ('volume', models.PositiveIntegerField(blank=True, null=True)),
                ('issue', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('biblio.reference',),
        ),
        migrations.CreateModel(
            name='Thesis',
            fields=[
                ('reference_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='biblio.Reference')),
                ('institute', models.CharField(max_length=500)),
            ],
            options={
                'abstract': False,
            },
            bases=('biblio.reference',),
        ),
        migrations.CreateModel(
            name='WebPage',
            fields=[
                ('reference_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='biblio.Reference')),
                ('institute', models.CharField(max_length=500)),
                ('url', models.CharField(max_length=200)),
                ('last_accessed', models.DateTimeField()),
            ],
            options={
                'abstract': False,
            },
            bases=('biblio.reference',),
        ),
        migrations.AddField(
            model_name='reference',
            name='authors',
            field=models.ManyToManyField(blank=True, through='biblio.Authorship', to='people.Person'),
        ),
        migrations.AddField(
            model_name='reference',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_biblio.reference_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='journal',
            name='publisher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='biblio.Publisher'),
        ),
        migrations.AddField(
            model_name='authorship',
            name='reference',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='biblio.Reference'),
        ),
        migrations.AddField(
            model_name='journalarticle',
            name='journal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='biblio.Journal'),
        ),
    ]
